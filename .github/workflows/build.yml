name: Multiplatform Build and Publish

on:
  workflow_call:
    inputs:
      REPO_NAME:
        required: true
        type: string
      IOS_LIBRARY_NAME:
        required: true
        type: string
      SWIFT_PACKAGE_REPO_OWNER:
        required: true
        type: string
      SWIFT_PACKAGE_REPO:
        required: true
        type: string
      XCFRAMEWORK_BUILD_TASK:
        required: true
        type: string
      ANDROID_PUBLISH_TASK:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true
      GH_PUBLISH_USERNAME:
        required: true
      GH_PUBLISH_TOKEN:
        required: true

jobs:
  check_prerequisites:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Check if required repo structure is present
        uses: andstor/file-existence-action@v1.1.0
        with:
          files: "packages/swift-package,packages/swift-package/Package.swift,packages/js-package,packages/js-package/package.json,shared,shared/build.gradle.kts,build-javascript.sh,.releaserc"
          allow_failure: true
  build:
    needs: check_prerequisites
    runs-on: superology-office
    env:
      IOS_LIBRARY_NAME: ${{ inputs.IOS_LIBRARY_NAME }}
      REPO_NAME: ${{ inputs.REPO_NAME }}
      SWIFT_PACKAGE_REPO: ${{ inputs.SWIFT_PACKAGE_REPO }}
      XCFRAMEWORK_BUILD_TASK: ${{ inputs.XCFRAMEWORK_BUILD_TASK }}
      ANDROID_PUBLISH_TASK: ${{ inputs.ANDROID_PUBLISH_TASK }}

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
          architecture: aarch64

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: '@superbet-group'

      - name: Get tag
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Build XCFramework
        run: ./gradlew ${{ inputs.XCFRAMEWORK_BUILD_TASK }}

      - name: Publish XCFramework
        id: publish_xcframework
        run: |
          version="${{ steps.get_tag.outputs.TAG }}"
          xcframework_dir="packages/swift-package/$version"
          s3_bucket="s3://applications-assets-public.production.stats.superbet.k8s.local/app-assets/multiplatform"

          mkdir -p $xcframework_dir
          zip -r "$xcframework_dir/MultiplatformLib.xcframework.zip" shared/build/XCFrameworks/release/*

          aws s3 sync "$xcframework_dir" "$s3_bucket/$version/" --profile applications-assets
          
          checksum=$(swift package compute-checksum "$xcframework_dir/MultiplatformLib.xcframework.zip")
          echo "File checksum: $checksum"
          
          # Set the output variable for later use
          echo "::set-output name=checksum::$checksum"

      - name: Publish Android library
        uses: burrunan/gradle-cache-action@v1.12
        env:
          GH_PUBLISH_USERNAME: ${{ secrets.GH_PUBLISH_USERNAME }}
          GH_PUBLISH_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}
          VERSION: ${{ steps.get_tag.outputs.TAG }}
        with:
          arguments: ${{ inputs.ANDROID_PUBLISH_TASK }}
          gradle-version: wrapper
          execution-only-caches: true
