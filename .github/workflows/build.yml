name: Multiplatform Build and Publish

on:
  workflow_call:
    inputs:
      REPO_NAME:
        required: true
        type: string
      IOS_LIBRARY_NAME:
        required: true
        type: string
      SWIFT_PACKAGE_REPO_OWNER:
        required: true
        type: string
      SWIFT_PACKAGE_REPO:
        required: true
        type: string
      XCFRAMEWORK_BUILD_TASK:
        required: true
        type: string
      ANDROID_PUBLISH_TASK:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true
      GH_PUBLISH_USERNAME:
        required: true
      GH_PUBLISH_TOKEN:
        required: true

jobs:
  check_prerequisites:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Check if required repo structure is present
        uses: andstor/file-existence-action@v1.1.0
        with:
          files: "packages/swift-package,packages/swift-package/Package.swift,packages/js-package,packages/js-package/package.json,shared,shared/build.gradle.kts,build-javascript.sh,.releaserc"
          allow_failure: true
  build:
    needs: check_prerequisites
    runs-on: superology-office
    env:
      IOS_LIBRARY_NAME: ${{ inputs.IOS_LIBRARY_NAME }}
      REPO_NAME: ${{ inputs.REPO_NAME }}
      SWIFT_PACKAGE_REPO: ${{ inputs.SWIFT_PACKAGE_REPO }}
      XCFRAMEWORK_BUILD_TASK: ${{ inputs.XCFRAMEWORK_BUILD_TASK }}
      ANDROID_PUBLISH_TASK: ${{ inputs.ANDROID_PUBLISH_TASK }}
    outputs:
      new_release_published: ${{ steps.semantic_release.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic_release.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
          architecture: aarch64

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: '@superbet-group'

      - name: Semantic Release
        id: semantic_release
        uses: cycjimmy/semantic-release-action@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Javascript Package
        if: steps.semantic_release.outputs.new_release_published == 'true'
        run: ./build-javascript.sh

      - name: Publish Javascript Package
        if: steps.semantic_release.outputs.new_release_published == 'true'
        run: |
          cd packages/js-package
          echo //npm.pkg.github.com/:_authToken=$GH_TOKEN >> .npmrc
          echo @superbet-group:registry=https://npm.pkg.github.com/superbet-group >> .npmrc
          npm version ${{ steps.semantic_release.outputs.new_release_version }}
          npm publish
          cd -
        env:
          GH_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}

      - name: Build XCFramework
        if: steps.semantic_release.outputs.new_release_published == 'true'
        run: ./gradlew ${{ inputs.XCFRAMEWORK_BUILD_TASK }}

      - name: Create XCFramework zip
        run: |
          cd $GITHUB_WORKSPACE
          xcframework_dir="${{ steps.semantic_release.outputs.new_release_version }}/MultiplatformLib.xcframework"
          
          sudo mkdir -p "${xcframework_dir}"
          
          zip -r "${xcframework_dir}.zip" shared/build/XCFrameworks/release/*
          
          zip_path="${xcframework_dir}.zip"
          checksum=$(swift package compute-checksum "$zip_path")
          echo "File checksum: $checksum"

      - name: Publish XCFramework zip to S3
        run: |
          s3_bucket="s3://applications-assets-public.production.stats.superbet.k8s.local/app-assets/multiplatform/"
          framework_folder="${{ steps.semantic_release.outputs.new_release_version }}/MultiplatformLib.xcframework.zip"
          aws s3 sync "$framework_folder" "$s3_bucket" --profile applications-assets

      - name: Publish Android library
        if: steps.semantic_release.outputs.new_release_published == 'true'
        uses: burrunan/gradle-cache-action@v1.12
        env:
          GH_PUBLISH_USERNAME: ${{ secrets.GH_PUBLISH_USERNAME }}
          GH_PUBLISH_TOKEN: ${{ secrets.GH_PUBLISH_TOKEN }}
          VERSION: ${{ steps.semantic_release.outputs.new_release_version }}
        with:
          arguments: ${{ inputs.ANDROID_PUBLISH_TASK }}
          gradle-version: wrapper
          execution-only-caches: true
